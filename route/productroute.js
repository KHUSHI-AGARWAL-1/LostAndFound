const express = require('express');
const router = express.Router();
const Product = require('../model/product');
const { isLoggedIn } = require('../middleware');
const nodemailer = require("nodemailer");

router.get("/products/new", isLoggedIn, async (req, res) => {
    try {
        res.render('productstemp/new.ejs');
    } catch (error) {
        console.error(error);
        res.status(500).send("Something went wrong.");
    }
});

router.post('/products', isLoggedIn, async (req, res) => {
    try {
        const { name, img, dec, tag, contactemail, contactphone } = req.body;
        const ownerid = req.user._id;
        await Product.create({ ownerid, name, img, dec, tag, contactemail, contactphone });

        let mail = "";
        if (tag === "found") {
            mail = await Product.find({ $and: [{ name: name }, { tag: "lost" }] });
        } else {
            mail = await Product.find({ $and: [{ name: name }, { tag: "found" }] });
        }

        mail.map((obj) => {
            sendMail(obj.name, obj.dec, obj.contactemail);
            console.log(obj.contactemail);
        });

        res.redirect('/products');
    } catch (error) {
        console.error(error);
        res.status(500).send("Something went wrong.");
    }
});

const sendMail = async (name, dec, email) => {
    try {
        let transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: "eventbeepgla@gmail.com",
        pass: "lswjcbfkyyizshfh",

            }
        });

        let mailOptions = {
            from: '"Lost and Found Portal" <pavan.sharma_cs21@gla.ac.in>',
            to: email,
            subject: 'Item matched with your provided item.',
            html: `
                <!DOCTYPE html>
                <html lang="en">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>Notification</title>
                </head>
                <body style="font-family: Arial, sans-serif; background-color: #f8f9fa; text-align: center; padding: 20px;">
                    <div style="max-width: 600px; margin: 0 auto; background-color: #ffffff; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);">
                        <h2 style="color: #007bff;">Notification</h2>
                        <p style="color: #495057;">Dear User,</p>
                        <p style="color: #495057;">The item you provided has been matched name: <strong style="color: #007bff;">${name}</strong></p>
                        <p style="color: #495057;">Description: <strong style="color: #007bff;">${dec}</strong></p>
                        <p style="color: #495057;">Visit Lost and Found Portal.</p>
                        <p style="color: #495057;">Thank you for using our service!</p>
                        <hr style="border: 1px solid #007bff;">
                        <p style="color: #868e96; font-size: 12px;">This email is autogenerated. Please do not reply.</p>
                    </div>
                </body>
                </html>
            `
        };

        transporter.sendMail(mailOptions, function (error, info) {
            if (error) {
                console.error(error);
            } else {
                console.log('Email sent: ' + info.response);
            }
        });
    } catch (error) {
        console.error(error);
    }
};

router.get('/products/:id', isLoggedIn, async (req, res) => {
    try {
        const { id } = req.params;
        const product = await Product.findById(id);
        res.render('productstemp/show.ejs', { product });
    } catch (error) {
        console.error(error);
        res.status(500).send("Something went wrong.");
    }
});

router.get('/products', async (req, res) => {
    try {
        const searchQuery = req.query.search || '';
        const regex = new RegExp(searchQuery, 'i');

        const lostproducts = await Product.find({ tag: 'lost', name: regex });
        const foundproducts = await Product.find({ tag: 'found', name: regex });

        res.render('productstemp/index.ejs', { lostproducts, foundproducts });
    } catch (error) {
        console.error(error);
        res.status(500).send("Something went wrong.");
    }
});

router.get('/products/:id/edit', isLoggedIn, async (req, res) => {
    try {
        const { id } = req.params;
        const product = await Product.findById(id);
        if (product.ownerid != req.user._id.toString()) {
            res.render('productstemp/notfound.ejs');
            return;
        }
        res.render('productstemp/edit.ejs', { product });
    } catch (error) {
        console.error(error);
        res.status(500).send("Something went wrong.");
    }
});

router.patch('/products/:id', isLoggedIn, async (req, res) => {
    try {
        const { name, img, dec, tag } = req.body;
        const { id } = req.params;
        const product = await Product.findById(id);
        if (product.ownerid != req.user._id.toString()) {
            res.render('productstemp/notfound.ejs');
            return;
        }
        await Product.findByIdAndUpdate(id, { name, img, dec, tag });
        res.redirect(`/products/${id}`);
    } catch (error) {
        console.error(error);
        res.status(500).send("Something went wrong.");
    }
});

router.delete('/products/:id', isLoggedIn, async (req, res) => {
    try {
        const { id } = req.params;
        const product = await Product.findById(id);
        if (product.ownerid != req.user._id.toString()) {
            res.render('productstemp/notfound.ejs');
            return;
        }
        await Product.findByIdAndDelete(id);
        res.redirect(`/products`);
    } catch (error) {
        console.error(error);
        res.status(500).send("Something went wrong.");
    }
});

module.exports = router;
